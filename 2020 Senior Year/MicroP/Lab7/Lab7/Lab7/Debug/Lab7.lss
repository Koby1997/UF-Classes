
Lab7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000526  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  0000059a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00802000  00802000  0000059a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000059a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  0000060c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005464  00000000  00000000  00000684  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003d19  00000000  00000000  00005ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000767  00000000  00000000  00009801  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d4  00000000  00000000  00009f68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000043ee  00000000  00000000  0000a13c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003bb  00000000  00000000  0000e52a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  0000e8e5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
   8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
   c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  10:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  14:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  18:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  1c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  20:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  24:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  28:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  2c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  30:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  34:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  38:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__vector_14>
  3c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  40:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  44:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  48:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  4c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  50:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  54:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  58:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  5c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  60:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  64:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  68:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  6c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  70:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  74:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  78:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  7c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  80:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  84:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  88:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  8c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  90:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  94:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  98:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  9c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  ac:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  bc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  cc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  dc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  ec:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  fc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 100:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 104:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 108:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 10c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 110:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 114:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 118:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 11c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 120:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 124:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 128:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 12c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 130:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 134:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 138:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 13c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 140:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 144:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 148:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 14c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 150:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 154:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 158:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 15c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 160:	0c 94 3a 02 	jmp	0x474	; 0x474 <__vector_88>
 164:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 168:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 16c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 170:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 174:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 178:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 17c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 180:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 184:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 188:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 18c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 190:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 194:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 198:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 19c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1ac:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1bc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1cc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1dc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1ec:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_clear_bss>:
 214:	20 e2       	ldi	r18, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	01 c0       	rjmp	.+2      	; 0x21e <.do_clear_bss_start>

0000021c <.do_clear_bss_loop>:
 21c:	1d 92       	st	X+, r1

0000021e <.do_clear_bss_start>:
 21e:	a2 30       	cpi	r26, 0x02	; 2
 220:	b2 07       	cpc	r27, r18
 222:	e1 f7       	brne	.-8      	; 0x21c <.do_clear_bss_loop>
 224:	0e 94 18 01 	call	0x230	; 0x230 <main>
 228:	0c 94 91 02 	jmp	0x522	; 0x522 <_exit>

0000022c <__bad_interrupt>:
 22c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000230 <main>:
			out_char('F');
			break;
		default:
			out_number(character);		
	}	
}
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	1f 92       	push	r1
 236:	1f 92       	push	r1
 238:	cd b7       	in	r28, 0x3d	; 61
 23a:	de b7       	in	r29, 0x3e	; 62
 23c:	0e 94 99 01 	call	0x332	; 0x332 <io_init>
 240:	0e 94 42 01 	call	0x284	; 0x284 <adc_init>
 244:	0e 94 68 01 	call	0x2d0	; 0x2d0 <tcc0_init>
 248:	0e 94 ab 01 	call	0x356	; 0x356 <usartd0_init>
 24c:	0e 94 8b 01 	call	0x316	; 0x316 <intr_init>
 250:	80 91 00 20 	lds	r24, 0x2000	; 0x802000 <_edata>
 254:	90 91 01 20 	lds	r25, 0x2001	; 0x802001 <_edata+0x1>
 258:	89 2f       	mov	r24, r25
 25a:	99 0f       	add	r25, r25
 25c:	99 0b       	sbc	r25, r25
 25e:	89 83       	std	Y+1, r24	; 0x01
 260:	80 91 00 20 	lds	r24, 0x2000	; 0x802000 <_edata>
 264:	90 91 01 20 	lds	r25, 0x2001	; 0x802001 <_edata+0x1>
 268:	8a 83       	std	Y+2, r24	; 0x02
 26a:	8a 81       	ldd	r24, Y+2	; 0x02
 26c:	08 2e       	mov	r0, r24
 26e:	00 0c       	add	r0, r0
 270:	99 0b       	sbc	r25, r25
 272:	0e 94 cc 01 	call	0x398	; 0x398 <out_binary>
 276:	89 81       	ldd	r24, Y+1	; 0x01
 278:	08 2e       	mov	r0, r24
 27a:	00 0c       	add	r0, r0
 27c:	99 0b       	sbc	r25, r25
 27e:	0e 94 cc 01 	call	0x398	; 0x398 <out_binary>
 282:	e6 cf       	rjmp	.-52     	; 0x250 <main+0x20>

00000284 <adc_init>:
 284:	cf 93       	push	r28
 286:	df 93       	push	r29
 288:	cd b7       	in	r28, 0x3d	; 61
 28a:	de b7       	in	r29, 0x3e	; 62
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	92 e0       	ldi	r25, 0x02	; 2
 290:	20 e1       	ldi	r18, 0x10	; 16
 292:	fc 01       	movw	r30, r24
 294:	21 83       	std	Z+1, r18	; 0x01
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	92 e0       	ldi	r25, 0x02	; 2
 29a:	20 e3       	ldi	r18, 0x30	; 48
 29c:	fc 01       	movw	r30, r24
 29e:	22 83       	std	Z+2, r18	; 0x02
 2a0:	80 e0       	ldi	r24, 0x00	; 0
 2a2:	92 e0       	ldi	r25, 0x02	; 2
 2a4:	21 e0       	ldi	r18, 0x01	; 1
 2a6:	fc 01       	movw	r30, r24
 2a8:	20 a3       	std	Z+32, r18	; 0x20
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	92 e0       	ldi	r25, 0x02	; 2
 2ae:	21 e0       	ldi	r18, 0x01	; 1
 2b0:	fc 01       	movw	r30, r24
 2b2:	23 a3       	std	Z+35, r18	; 0x23
 2b4:	80 e0       	ldi	r24, 0x00	; 0
 2b6:	92 e0       	ldi	r25, 0x02	; 2
 2b8:	22 e0       	ldi	r18, 0x02	; 2
 2ba:	fc 01       	movw	r30, r24
 2bc:	23 83       	std	Z+3, r18	; 0x03
 2be:	80 e0       	ldi	r24, 0x00	; 0
 2c0:	92 e0       	ldi	r25, 0x02	; 2
 2c2:	21 e0       	ldi	r18, 0x01	; 1
 2c4:	fc 01       	movw	r30, r24
 2c6:	20 83       	st	Z, r18
 2c8:	00 00       	nop
 2ca:	df 91       	pop	r29
 2cc:	cf 91       	pop	r28
 2ce:	08 95       	ret

000002d0 <tcc0_init>:
 2d0:	cf 93       	push	r28
 2d2:	df 93       	push	r29
 2d4:	cd b7       	in	r28, 0x3d	; 61
 2d6:	de b7       	in	r29, 0x3e	; 62
 2d8:	80 e0       	ldi	r24, 0x00	; 0
 2da:	98 e0       	ldi	r25, 0x08	; 8
 2dc:	fc 01       	movw	r30, r24
 2de:	10 a2       	std	Z+32, r1	; 0x20
 2e0:	11 a2       	std	Z+33, r1	; 0x21
 2e2:	80 e0       	ldi	r24, 0x00	; 0
 2e4:	98 e0       	ldi	r25, 0x08	; 8
 2e6:	20 e2       	ldi	r18, 0x20	; 32
 2e8:	3e e4       	ldi	r19, 0x4E	; 78
 2ea:	fc 01       	movw	r30, r24
 2ec:	26 a3       	std	Z+38, r18	; 0x26
 2ee:	37 a3       	std	Z+39, r19	; 0x27
 2f0:	80 e0       	ldi	r24, 0x00	; 0
 2f2:	98 e0       	ldi	r25, 0x08	; 8
 2f4:	21 e0       	ldi	r18, 0x01	; 1
 2f6:	fc 01       	movw	r30, r24
 2f8:	20 83       	st	Z, r18
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	98 e0       	ldi	r25, 0x08	; 8
 2fe:	21 e0       	ldi	r18, 0x01	; 1
 300:	fc 01       	movw	r30, r24
 302:	26 83       	std	Z+6, r18	; 0x06
 304:	80 e8       	ldi	r24, 0x80	; 128
 306:	91 e0       	ldi	r25, 0x01	; 1
 308:	20 ec       	ldi	r18, 0xC0	; 192
 30a:	fc 01       	movw	r30, r24
 30c:	20 83       	st	Z, r18
 30e:	00 00       	nop
 310:	df 91       	pop	r29
 312:	cf 91       	pop	r28
 314:	08 95       	ret

00000316 <intr_init>:
 316:	cf 93       	push	r28
 318:	df 93       	push	r29
 31a:	cd b7       	in	r28, 0x3d	; 61
 31c:	de b7       	in	r29, 0x3e	; 62
 31e:	80 ea       	ldi	r24, 0xA0	; 160
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	21 e0       	ldi	r18, 0x01	; 1
 324:	fc 01       	movw	r30, r24
 326:	22 83       	std	Z+2, r18	; 0x02
 328:	78 94       	sei
 32a:	00 00       	nop
 32c:	df 91       	pop	r29
 32e:	cf 91       	pop	r28
 330:	08 95       	ret

00000332 <io_init>:
 332:	cf 93       	push	r28
 334:	df 93       	push	r29
 336:	cd b7       	in	r28, 0x3d	; 61
 338:	de b7       	in	r29, 0x3e	; 62
 33a:	80 e6       	ldi	r24, 0x60	; 96
 33c:	96 e0       	ldi	r25, 0x06	; 6
 33e:	28 e2       	ldi	r18, 0x28	; 40
 340:	fc 01       	movw	r30, r24
 342:	25 83       	std	Z+5, r18	; 0x05
 344:	80 e6       	ldi	r24, 0x60	; 96
 346:	96 e0       	ldi	r25, 0x06	; 6
 348:	28 e2       	ldi	r18, 0x28	; 40
 34a:	fc 01       	movw	r30, r24
 34c:	21 83       	std	Z+1, r18	; 0x01
 34e:	00 00       	nop
 350:	df 91       	pop	r29
 352:	cf 91       	pop	r28
 354:	08 95       	ret

00000356 <usartd0_init>:
 356:	cf 93       	push	r28
 358:	df 93       	push	r29
 35a:	cd b7       	in	r28, 0x3d	; 61
 35c:	de b7       	in	r29, 0x3e	; 62
 35e:	80 ea       	ldi	r24, 0xA0	; 160
 360:	99 e0       	ldi	r25, 0x09	; 9
 362:	23 e0       	ldi	r18, 0x03	; 3
 364:	fc 01       	movw	r30, r24
 366:	25 83       	std	Z+5, r18	; 0x05
 368:	80 ea       	ldi	r24, 0xA0	; 160
 36a:	99 e0       	ldi	r25, 0x09	; 9
 36c:	21 e0       	ldi	r18, 0x01	; 1
 36e:	fc 01       	movw	r30, r24
 370:	26 83       	std	Z+6, r18	; 0x06
 372:	80 ea       	ldi	r24, 0xA0	; 160
 374:	99 e0       	ldi	r25, 0x09	; 9
 376:	20 ec       	ldi	r18, 0xC0	; 192
 378:	fc 01       	movw	r30, r24
 37a:	27 83       	std	Z+7, r18	; 0x07
 37c:	80 ea       	ldi	r24, 0xA0	; 160
 37e:	99 e0       	ldi	r25, 0x09	; 9
 380:	28 e1       	ldi	r18, 0x18	; 24
 382:	fc 01       	movw	r30, r24
 384:	24 83       	std	Z+4, r18	; 0x04
 386:	80 ea       	ldi	r24, 0xA0	; 160
 388:	99 e0       	ldi	r25, 0x09	; 9
 38a:	20 e1       	ldi	r18, 0x10	; 16
 38c:	fc 01       	movw	r30, r24
 38e:	23 83       	std	Z+3, r18	; 0x03
 390:	00 00       	nop
 392:	df 91       	pop	r29
 394:	cf 91       	pop	r28
 396:	08 95       	ret

00000398 <out_binary>:
 398:	cf 93       	push	r28
 39a:	df 93       	push	r29
 39c:	1f 92       	push	r1
 39e:	cd b7       	in	r28, 0x3d	; 61
 3a0:	de b7       	in	r29, 0x3e	; 62
 3a2:	89 83       	std	Y+1, r24	; 0x01
 3a4:	80 ea       	ldi	r24, 0xA0	; 160
 3a6:	99 e0       	ldi	r25, 0x09	; 9
 3a8:	29 81       	ldd	r18, Y+1	; 0x01
 3aa:	fc 01       	movw	r30, r24
 3ac:	20 83       	st	Z, r18
 3ae:	00 00       	nop
 3b0:	80 ea       	ldi	r24, 0xA0	; 160
 3b2:	99 e0       	ldi	r25, 0x09	; 9
 3b4:	fc 01       	movw	r30, r24
 3b6:	81 81       	ldd	r24, Z+1	; 0x01
 3b8:	88 2f       	mov	r24, r24
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	80 72       	andi	r24, 0x20	; 32
 3be:	99 27       	eor	r25, r25
 3c0:	89 2b       	or	r24, r25
 3c2:	b1 f3       	breq	.-20     	; 0x3b0 <out_binary+0x18>
 3c4:	00 00       	nop
 3c6:	0f 90       	pop	r0
 3c8:	df 91       	pop	r29
 3ca:	cf 91       	pop	r28
 3cc:	08 95       	ret

000003ce <__vector_14>:


/*******************ISRs************/

ISR(TCC0_OVF_vect)
{	
 3ce:	1f 92       	push	r1
 3d0:	0f 92       	push	r0
 3d2:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 3d6:	0f 92       	push	r0
 3d8:	11 24       	eor	r1, r1
 3da:	00 90 38 00 	lds	r0, 0x0038	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 3de:	0f 92       	push	r0
 3e0:	10 92 38 00 	sts	0x0038, r1	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 3e4:	00 90 3a 00 	lds	r0, 0x003A	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 3e8:	0f 92       	push	r0
 3ea:	10 92 3a 00 	sts	0x003A, r1	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 3ee:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 3f2:	0f 92       	push	r0
 3f4:	10 92 3b 00 	sts	0x003B, r1	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 3f8:	2f 93       	push	r18
 3fa:	8f 93       	push	r24
 3fc:	9f 93       	push	r25
 3fe:	ef 93       	push	r30
 400:	ff 93       	push	r31
 402:	cf 93       	push	r28
 404:	df 93       	push	r29
 406:	cd b7       	in	r28, 0x3d	; 61
 408:	de b7       	in	r29, 0x3e	; 62
	/* Wait for the conversion to be completed. */
	while(!(ADCA.CH0.INTFLAGS & ADC_CH_CHIF_bm));
 40a:	00 00       	nop
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	92 e0       	ldi	r25, 0x02	; 2
 410:	fc 01       	movw	r30, r24
 412:	83 a1       	ldd	r24, Z+35	; 0x23
 414:	88 2f       	mov	r24, r24
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	81 70       	andi	r24, 0x01	; 1
 41a:	99 27       	eor	r25, r25
 41c:	89 2b       	or	r24, r25
 41e:	b1 f3       	breq	.-20     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
	
	/* Save result into a signed 16-bit integer variable */
	temp = ADCA.CH0.RES;
 420:	80 e0       	ldi	r24, 0x00	; 0
 422:	92 e0       	ldi	r25, 0x02	; 2
 424:	fc 01       	movw	r30, r24
 426:	84 a1       	ldd	r24, Z+36	; 0x24
 428:	95 a1       	ldd	r25, Z+37	; 0x25
 42a:	80 93 00 20 	sts	0x2000, r24	; 0x802000 <_edata>
 42e:	90 93 01 20 	sts	0x2001, r25	; 0x802001 <_edata+0x1>
	
	/* Toggle GREEN_PWM led */
	PORTD.OUTTGL = (1<<5);
 432:	80 e6       	ldi	r24, 0x60	; 96
 434:	96 e0       	ldi	r25, 0x06	; 6
 436:	20 e2       	ldi	r18, 0x20	; 32
 438:	fc 01       	movw	r30, r24
 43a:	27 83       	std	Z+7, r18	; 0x07
	
	TCC0.INTCTRLA = TC_OVFINTLVL_LO_gc;	
 43c:	80 e0       	ldi	r24, 0x00	; 0
 43e:	98 e0       	ldi	r25, 0x08	; 8
 440:	21 e0       	ldi	r18, 0x01	; 1
 442:	fc 01       	movw	r30, r24
 444:	26 83       	std	Z+6, r18	; 0x06
}
 446:	00 00       	nop
 448:	df 91       	pop	r29
 44a:	cf 91       	pop	r28
 44c:	ff 91       	pop	r31
 44e:	ef 91       	pop	r30
 450:	9f 91       	pop	r25
 452:	8f 91       	pop	r24
 454:	2f 91       	pop	r18
 456:	0f 90       	pop	r0
 458:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 45c:	0f 90       	pop	r0
 45e:	00 92 3a 00 	sts	0x003A, r0	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 462:	0f 90       	pop	r0
 464:	00 92 38 00 	sts	0x0038, r0	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 468:	0f 90       	pop	r0
 46a:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 46e:	0f 90       	pop	r0
 470:	1f 90       	pop	r1
 472:	18 95       	reti

00000474 <__vector_88>:


ISR(USARTD0_RXC_vect)
{
 474:	1f 92       	push	r1
 476:	0f 92       	push	r0
 478:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 47c:	0f 92       	push	r0
 47e:	11 24       	eor	r1, r1
 480:	00 90 38 00 	lds	r0, 0x0038	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 484:	0f 92       	push	r0
 486:	10 92 38 00 	sts	0x0038, r1	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 48a:	00 90 3a 00 	lds	r0, 0x003A	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 48e:	0f 92       	push	r0
 490:	10 92 3a 00 	sts	0x003A, r1	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 494:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 498:	0f 92       	push	r0
 49a:	10 92 3b 00 	sts	0x003B, r1	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 49e:	2f 93       	push	r18
 4a0:	8f 93       	push	r24
 4a2:	9f 93       	push	r25
 4a4:	ef 93       	push	r30
 4a6:	ff 93       	push	r31
 4a8:	cf 93       	push	r28
 4aa:	df 93       	push	r29
 4ac:	cd b7       	in	r28, 0x3d	; 61
 4ae:	de b7       	in	r29, 0x3e	; 62
	while(!(USARTD0.STATUS & USART_DREIF_bm)); //wait
 4b0:	00 00       	nop
 4b2:	80 ea       	ldi	r24, 0xA0	; 160
 4b4:	99 e0       	ldi	r25, 0x09	; 9
 4b6:	fc 01       	movw	r30, r24
 4b8:	81 81       	ldd	r24, Z+1	; 0x01
 4ba:	88 2f       	mov	r24, r24
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	80 72       	andi	r24, 0x20	; 32
 4c0:	99 27       	eor	r25, r25
 4c2:	89 2b       	or	r24, r25
 4c4:	b1 f3       	breq	.-20     	; 0x4b2 <__vector_88+0x3e>
	
	if(USARTD0.DATA == 'C')
 4c6:	80 ea       	ldi	r24, 0xA0	; 160
 4c8:	99 e0       	ldi	r25, 0x09	; 9
 4ca:	fc 01       	movw	r30, r24
 4cc:	80 81       	ld	r24, Z
 4ce:	83 34       	cpi	r24, 0x43	; 67
 4d0:	31 f4       	brne	.+12     	; 0x4de <__vector_88+0x6a>
	{
		/* Measure voltage on PA1 and PA6. */
		ADCA.CH0.MUXCTRL = ADC_CH_MUXPOS_PIN1_gc | ADC_CH_MUXNEG_PIN6_gc;		
 4d2:	80 e0       	ldi	r24, 0x00	; 0
 4d4:	92 e0       	ldi	r25, 0x02	; 2
 4d6:	2a e0       	ldi	r18, 0x0A	; 10
 4d8:	fc 01       	movw	r30, r24
 4da:	21 a3       	std	Z+33, r18	; 0x21
	else if(USARTD0.DATA == 'J')
	{
		/* Measure voltage on PA4 and PA5. */
		ADCA.CH0.MUXCTRL = ADC_CH_MUXPOS_PIN4_gc | ADC_CH_MUXNEG_PIN5_gc;
	}	
 4dc:	0b c0       	rjmp	.+22     	; 0x4f4 <__vector_88+0x80>
	if(USARTD0.DATA == 'C')
	{
		/* Measure voltage on PA1 and PA6. */
		ADCA.CH0.MUXCTRL = ADC_CH_MUXPOS_PIN1_gc | ADC_CH_MUXNEG_PIN6_gc;		
	}
	else if(USARTD0.DATA == 'J')
 4de:	80 ea       	ldi	r24, 0xA0	; 160
 4e0:	99 e0       	ldi	r25, 0x09	; 9
 4e2:	fc 01       	movw	r30, r24
 4e4:	80 81       	ld	r24, Z
 4e6:	8a 34       	cpi	r24, 0x4A	; 74
 4e8:	29 f4       	brne	.+10     	; 0x4f4 <__vector_88+0x80>
	{
		/* Measure voltage on PA4 and PA5. */
		ADCA.CH0.MUXCTRL = ADC_CH_MUXPOS_PIN4_gc | ADC_CH_MUXNEG_PIN5_gc;
 4ea:	80 e0       	ldi	r24, 0x00	; 0
 4ec:	92 e0       	ldi	r25, 0x02	; 2
 4ee:	21 e2       	ldi	r18, 0x21	; 33
 4f0:	fc 01       	movw	r30, r24
 4f2:	21 a3       	std	Z+33, r18	; 0x21
	}	
 4f4:	00 00       	nop
 4f6:	df 91       	pop	r29
 4f8:	cf 91       	pop	r28
 4fa:	ff 91       	pop	r31
 4fc:	ef 91       	pop	r30
 4fe:	9f 91       	pop	r25
 500:	8f 91       	pop	r24
 502:	2f 91       	pop	r18
 504:	0f 90       	pop	r0
 506:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 50a:	0f 90       	pop	r0
 50c:	00 92 3a 00 	sts	0x003A, r0	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 510:	0f 90       	pop	r0
 512:	00 92 38 00 	sts	0x0038, r0	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 516:	0f 90       	pop	r0
 518:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 51c:	0f 90       	pop	r0
 51e:	1f 90       	pop	r1
 520:	18 95       	reti

00000522 <_exit>:
 522:	f8 94       	cli

00000524 <__stop_program>:
 524:	ff cf       	rjmp	.-2      	; 0x524 <__stop_program>
